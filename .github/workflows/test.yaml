name: Test and deployment Symfony
on: [push]
jobs:
  test:
    name: Symfony (PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, amqp
          coverage: xdebug
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: |
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
      #- name: Detecting PHP Code Standards Violations
      #  run: vendor/bin/phpcs
      #- name: init docker
      #  run: docker-compose up -d
      - name: init DB test
        run: |
          mkdir -p data
          touch data/database.sqlite
      - name: Run Tests
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: php bin/phpunit --coverage-text
  build:
    - name: build Symfony
      steps:
        - name: Get composer cache directory
          id: composer-cache
          run: echo "::set-output name=dir::$(composer config cache-files-dir)"